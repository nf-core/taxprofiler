/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/taxprofiler -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input                                 = 'https://raw.githubusercontent.com/nf-core/test-datasets/taxprofiler/samplesheet.csv'
    databases                             = 'https://raw.githubusercontent.com/nf-core/test-datasets/taxprofiler/database.csv'
    perform_shortread_qc                  = true
    perform_longread_qc                   = true
    perform_shortread_complexityfilter    = true
    perform_shortread_hostremoval         = true
    perform_longread_hostremoval          = true
    perform_runmerging                    = true
    hostremoval_reference                 = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.fasta'
    run_kaiju                             = true
    run_kraken2                           = true
    run_malt                              = true
    run_metaphlan3                        = true
    run_centrifuge                        = true
    run_diamond                           = true
    run_motus                             = false
    run_krona                             = true
    malt_save_reads                       = true
    kraken2_save_reads                    = true
    centrifuge_save_reads                 = true
    diamond_save_reads                    = true
}

process {
    withName: MALT_RUN {
        maxForks = 1
    }
    withName: MEGAN_RMA2INFO {
        maxForks = 1
    }
}
