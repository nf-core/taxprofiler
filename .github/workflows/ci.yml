name: nf-core CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

env:
  NXF_ANSI_LOG: false
  CAPSULE_LOG: none

jobs:
  test:
    name: Run pipeline with test data
    # Only run on push if this is the nf-core dev branch (merged PRs)
    if: "${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/taxprofiler') }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Nextflow versions
        include:
          # Test pipeline minimum Nextflow version
          - NXF_VER: "21.10.3"
            NXF_EDGE: ""
          # Test latest edge release of Nextflow
          - NXF_VER: ""
            NXF_EDGE: "1"
        parameters:
          - "--perform_longread_qc false"
          - "--perform_shortread_qc false"
          - "--shortread_qc_tool fastp"
          - "--shortread_qc_tool fastp --shortread_qc_mergepairs --shortread_qc_excludeunmerged"
          - "--shortread_qc_tool fastp --shortread_qc_mergepairs"
          - "--shortread_qc_tool adapterremoval"
          - "--shortread_qc_tool adapterremoval --shortread_qc_mergepairs --shortread_qc_excludeunmerged"
          - "--shortread_qc_tool adapterremoval --shortread_qc_mergepairs"
          - "--shortread_complexityfilter_tool bbduk"
          - "--shortread_complexityfilter_tool prinseqplusplus"
          - "--perform_runmerging"
          - "--perform_runmerging --shortread_qc_mergepairs"
          - "--shortread_complexityfilter false --perform_shortread_hostremoval"

    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Install Nextflow
        env:
          NXF_VER: ${{ matrix.NXF_VER }}
          # Uncomment only if the edge release is more recent than the latest stable release
          # See https://github.com/nextflow-io/nextflow/issues/2467
          # NXF_EDGE: ${{ matrix.NXF_EDGE }}
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Show current locale
        run: locale

      - name: Set UTF-8 enabled locale
        run: |
          sudo locale-gen en_US.UTF-8
          sudo update-locale LANG=en_US.UTF-8

      - name: Run pipeline with test data
        # TODO nf-core: You can customise CI pipeline run tests as required
        # For example: adding multiple test runs with different parameters
        # Remember that you can parallelise this by using strategy.matrix
        run: |
          nextflow run ${GITHUB_WORKSPACE} -profile test,docker --outdir ./results ${{ matrix.parameters }}

  motus:
    name: Test mOTUs with workflow parameters
    if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/taxprofiler') }}
    runs-on: ubuntu-latest
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_ANSI_LOG: false
    strategy:
      matrix:
        # Nextflow versions
        include:
          # Test pipeline minimum Nextflow version
          - NXF_VER: "21.10.3"
            NXF_EDGE: ""
          # Test latest edge release of Nextflow
          - NXF_VER: ""
            NXF_EDGE: "1"

    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Install Nextflow
        env:
          NXF_VER: ${{ matrix.NXF_VER }}
          # Uncomment only if the edge release is more recent than the latest stable release
          # See https://github.com/nextflow-io/nextflow/issues/2467
          # NXF_EDGE: ${{ matrix.NXF_EDGE }}
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Show current locale
        run: locale

      - name: Set UTF-8 enabled locale
        run: |
          sudo locale-gen en_US.UTF-8
          sudo update-locale LANG=en_US.UTF-8

      - name: Prepare the database
        run: |
          wget https://raw.githubusercontent.com/motu-tool/mOTUs/master/motus/downloadDB.py
          python downloadDB.py > download_db_log.txt
          echo 'tool,db_name,db_params,db_path' > 'database_motus.csv'
          echo 'motus,db_mOTU,,db_mOTU' >> 'database_motus.csv'

      - name: Run pipeline with test data
        run: |
          nextflow run ${GITHUB_WORKSPACE} -profile test_motus,docker --outdir ./results --databases ./database_motus.csv
