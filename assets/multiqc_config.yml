report_comment: >

  This report has been generated by the <a href="https://github.com/nf-core/taxprofiler/tree/dev" target="_blank">nf-core/taxprofiler</a>
  analysis pipeline. For information about how to interpret these results, please see the
  <a href="https://nf-co.re/taxprofiler/dev/docs/output" target="_blank">documentation</a>.

report_section_order:
  "nf-core-taxprofiler-methods-description":
    order: -1000
  software_versions:
    order: -1001
  "nf-core-taxprofiler-summary":
    order: -1002

export_plots: true

disable_version_detection: true
custom_logo: "nf-core-taxprofiler_logo_custom_light.png"
custom_logo_url: https://nf-co.re/taxprofiler
custom_logo_title: "nf-core/taxprofiler"

run_modules:
  - fastqc
  - adapterRemoval
  - fastp
  - bbduk
  - prinseqplusplus
  - porechop
  - filtlong
  - bowtie2
  - minimap2
  - samtools
  - kraken
  - kaiju
  - diamond
  - malt
  - motus
  - custom_content

sp:
  diamond:
    fn_re: ".*.diamond.log$"
  fastqc/data:
    fn_re: ".*(fastqc|falco)_data.txt$"
  fastqc/zip:
    fn: "*_fastqc.zip"

top_modules:
  - "fastqc":
      name: "FastQC / Falco (pre-Trimming)"
      path_filters:
        - "*raw*"
      path_filters_exclude:
        - "*processed*"
      extra: "If used in this run, Falco is a drop-in replacement for FastQC producing the same output, written by Guilherme de Sena Brandine and Andrew D. Smith."
  - "fastqc":
      name: "FastQC / Falco (post-Trimming)"
      path_filters:
        - "*processed*"
      path_filters_exclude:
        - "*raw*"
      extra: "If used in this run, Falco is a drop-in replacement for FastQC producing the same output, written by Guilherme de Sena Brandine and Andrew D. Smith."
  - "fastp"
  - "adapterRemoval"
  - "porechop":
      extra: "ℹ️: if you get the error message 'Error - was not able to plot data.' this means that porechop did not detect any adapters and therefore no statistics generated."
  - "bbduk"
  - "prinseqplusplus"
  - "filtlong"
  - "bowtie2":
      name: "bowtie2"
  - "samtools":
      name: "Samtools Stats"
  - "kraken":
      name: "Kraken"
      path_filters:
        - "*.kraken2.kraken2.report.txt"
  - "kraken":
      name: "Bracken"
      anchor: "bracken"
      target: "Bracken"
      doi: "10.7717/peerj-cs.104"
      info: "Estimates species abundances in metagenomics samples by probabilistically re-distributing reads in the taxonomic tree."
      extra: "ℹ️: plot title will say Kraken2 due to the first step of bracken producing the same output format as Kraken. Abundance information is currently not supported in MultiQC."
      path_filters:
        - "*.bracken.kraken2.report.txt"
  - "kraken":
      name: "Centrifuge"
      anchor: "centrifuge"
      target: "Centrifuge"
      doi: "10.1101/gr.210641.116"
      info: "is a very rapid and memory-efficient system for the classification of DNA sequences from microbial samples. The system uses a novel indexing scheme based on the Burrows-Wheeler transform (BWT) and the Ferragina-Manzini (FM) index. Note: Figure title"
      extra: "ℹ️: plot title will say Kraken2 due to Centrifuge producing the same output format as Kraken. If activated, see the actual Kraken2 results in the section above."
      path_filters:
        - "*.centrifuge.txt"
  - "malt":
      name: "MALT"
  - "diamond"
  - "kaiju":
      name: "Kaiju"
  - "motus"

#It is not possible to set placement for custom kraken and centrifuge columns.

table_columns_placement:
  FastQC / Falco (pre-Trimming):
    total_sequences: 100
    avg_sequence_length: 110
    median_sequence_length: 120
    percent_duplicates: 130
    percent_gc: 140
    percent_fails: 150
  FastQC / Falco (post-Trimming):
    total_sequences: 200
    avg_sequence_length: 210
    median_sequence_length: 220
    percent_duplicates: 230
    percent_gc: 240
    percent_fails: 250
  fastp:
    pct_adapter: 300
    pct_surviving: 310
    pct_duplication: 320
    after_filtering_gc_content: 330
    after_filtering_q30_rate: 340
    after_filtering_q30_bases: 350
    filtering_result_passed_filter_reads: 360
  Adapter Removal:
    aligned_total: 360
    percent_aligned: 370
    percent_collapsed: 380
    percent_discarded: 390
  Porechop:
    Input Reads: 400
    Start Trimmed: 410
    Start Trimmed Percent: 420
    End Trimmed: 430
    End Trimmed Percent: 440
    Middle Split: 450
    Middle Split Percent: 460
  Filtlong:
    Target bases: 500
  BBDuk:
    Input reads: 800
    Total Removed bases percent: 810
    Total Removed bases: 820
    Total Removed reads percent: 830
    Total Removed reads: 840
  PRINSEQ++:
    prinseqplusplus_total: 900
  bowtie2:
    overall_alignment_rate: 1000
  Samtools Stats:
    raw_total_sequences: 1100
    reads_mapped: 1110
    reads_mapped_percent: 1120
    reads_properly_paired_percent: 1130
    non-primary_alignments: 1140
    reads_MQ0_percent: 1150
    error_rate: 1160
  Bracken:
    "% Unclassified": 1200
    "% Top 5": 1210
  Centrifuge:
    "% Unclassified": 1300
    "% Top 5": 1310
  DIAMOND:
    queries_aligned: 1400
  Kaiju:
    assigned: 1500
    "% Assigned": 1510
    "% Unclassified": 1520
  Kraken:
    "% Unclassified": 1600
    "% Top 5": 1610
  MALT:
    "Num. of queries": 1700
    Total reads: 1710
    Mappability: 1720
    Assig. Taxonomy: 1730
    Taxonomic assignment success: 1740
  motus:
    Total number of reads: 1800
    Number of reads after filtering: 1810
    Total number of inserts: 1820
    Unique mappers: 1830
    Multiple mappers: 1840
    Ignored multiple mapper without unique hit: 1850
    "Number of ref-mOTUs": 1860
    "Number of meta-mOTUs": 1870
    "Number of ext-mOTUs": 1880

table_columns_visible:
  FastQC / Falco (pre-Trimming):
    total_sequences: True
    avg_sequence_length: True
    percent_duplicates: True
    percent_gc: True
    percent_fails: False
  FastQC / Falco (post-Trimming):
    total_sequences: True
    avg_sequence_length: True
    percent_duplicates: False
    percent_gc: False
    percent_fails: False
  porechop:
    Input reads: False
    Start Trimmed:
    Start Trimmed Percent: True
    End Trimmed: False
    End Trimmed Percent: True
    Middle Split: False
    Middle Split Percent: True
  fastp:
    pct_adapter: True
    pct_surviving: True
    pct_duplication: False
    after_filtering_gc_content: False
    after_filtering_q30_rate: False
    after_filtering_q30_bases: False
  Filtlong:
    Target bases: True
  Adapter Removal:
    aligned_total: True
    percent_aligned: True
    percent_collapsed: True
    percent_discarded: False
  BBDuk:
    Input reads: False
    Total Removed bases Percent: False
    Total Removed bases: False
    Total Removed reads percent: True
    Total Removed reads: False
  "PRINSEQ++":
    prinseqplusplus_total: True
  bowtie2:
    overall_alignment_rate: True
  Samtools Stats:
    raw_total_sequences: True
    reads_mapped: True
    reads_mapped_percent: True
    reads_properly_paired_percent: False
    non-primary_alignments: False
    reads_MQ0_percent: False
    error_rate: False
  Kraken: False
  Bracken: False
  Centrifuge: False
  DIAMOND: False
  Kaiju: False
  MALT: False
  motus: False

table_columns_name:
  FastQC / Falco (pre-Trimming):
    total_sequences: "Nr. Input Reads"
    avg_sequence_length: "Length Input Reads"
    percent_gc: "% GC Input Reads"
    percent_duplicates: "% Dups Input Reads"
    percent_fails: "% Failed Input Reads"
  FastQC / Falco (post-Trimming):
    total_sequences: "Nr. Processed Reads"
    avg_sequence_length: "Length Processed Reads"
    percent_gc: "% GC Processed Reads"
    percent_duplicates: "% Dups Processed Reads"
    percent_fails: "% Failed Processed Reads"
  Samtools Stats:
    raw_total_sequences: "Nr. Reads Into Mapping"
    reads_mapped: "Nr. Mapped Reads"
    reads_mapped_percent: "% Mapped Reads"

extra_fn_clean_exts:
  - "kraken2.report.txt"
  - ".txt"
  - ".settings"
  - ".bbduk"
  - ".unmapped"
  - "_filtered"
  - type: remove
    pattern: "_falco"

section_comments:
  general_stats: "By default, all read count columns are displayed as millions (M) of reads."
